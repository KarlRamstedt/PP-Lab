<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>//Insert declarations of global clocks, variables, constants and channels.
const int M = 2;			//The number of men
const int W = 2;			//The number of women
const int MCS = 0;          //The number of men in CS.
const int WCS = 0;          //The number of women in CS.
const int MD = 0;           //The number of delayed men.
const int WD = 0;           //The number of delayed women.

const int X = 3;			//The number of semaphores. You might want to add some
const int Men_guard = 0;			//Semaphore number 0 is named Men_guard
const int Women_guard = 1;			//Semaphore number 1 is named Women_guard
const int Mutex_guard = 2;          //Mutex semaphore

int[0,1] sem[X] = { 1, 1, 1 };		//Make sure to initialize the semaphores correct
int[0,1] ready[M+W];			//ready[i]==0 implies that process i is blocked
int[0,M+W] ID;				//Global variable used to communicate process id to semaphore

urgent chan P[X];			//Channels used to invoke a semaphore P() operation
urgent chan V[X];			//Channels used to invoke a semaphore V() operation
urgent chan Go;				//Channel used on all transitions with no other syncronization. Implementing progression

</declaration>
	<template>
		<name x="5" y="5">Semaphore</name>
		<parameter>const int s</parameter>
		<declaration>//Insert local declarations of clocks, variables and constants.
int[0,M+W] Blocked = 0;         		//Number of processes currently blocked on this semaphore
int[0,M+W+1] Queue[M+W];			//FOFO queue of blocked processes
int[0,M+W+1] pid;				//Identity of process to be blocked or released
int[0,M+W] i;					//Iterator used for shifting the queue</declaration>
		<location id="id0" x="312" y="176">
		</location>
		<location id="id1" x="416" y="312">
			<committed/>
		</location>
		<location id="id2" x="416" y="456">
			<committed/>
		</location>
		<location id="id3" x="520" y="176">
			<committed/>
		</location>
		<location id="id4" x="712" y="176">
			<committed/>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="392" y="232">P[s]?</label>
			<label kind="assignment" x="392" y="248">pid = ID,
ready[pid] = 0,
ID = 0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="224" y="248">Blocked == 0 &amp;&amp;
sem[s]&gt;0</label>
			<label kind="assignment" x="224" y="280">sem[s]--,
ready[pid] = 1</label>
			<nail x="312" y="312"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="400" y="360">sem[s]==0</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="assignment" x="200" y="464">Queue[Blocked] = pid,
Blocked++</label>
			<nail x="200" y="456"/>
			<nail x="200" y="176"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="392" y="176">V[s] ?</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="360" y="112">Blocked==0</label>
			<label kind="assignment" x="360" y="128">sem[s]++</label>
			<nail x="520" y="88"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="552" y="152">Blocked &gt; 0</label>
			<label kind="assignment" x="552" y="184">pid = Queue[0],
ready[pid] = 1,
Blocked--,
pid = 0</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="768" y="160">i &lt;= Blocked</label>
			<label kind="assignment" x="768" y="176">Queue[i] = Queue[i+1],
i++</label>
			<nail x="784" y="144"/>
			<nail x="784" y="232"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="guard" x="416" y="8">i &gt; Blocked</label>
			<label kind="assignment" x="416" y="32">i = 0</label>
			<nail x="712" y="32"/>
			<nail x="312" y="32"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Hurry</name>
		<location id="id5" x="312" y="208">
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="376" y="200">Go!</label>
			<nail x="368" y="184"/>
			<nail x="368" y="240"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Man</name>
		<parameter>const int id</parameter>
		<location id="id6" x="-170" y="-348">
		</location>
		<location id="id7" x="25" y="-399">
			<name x="-42" y="-408">Prepare</name>
		</location>
		<location id="id8" x="8" y="-629">
			<name x="-2" y="-663">Delay</name>
		</location>
		<location id="id9" x="-161" y="-629">
			<name x="-171" y="-663">If</name>
		</location>
		<location id="id10" x="-280" y="-493">
			<name x="-304" y="-525">Start</name>
		</location>
		<location id="id11" x="127" y="-518">
			<name x="136" y="-552">Wait</name>
		</location>
		<location id="id12" x="25" y="-272">
			<name x="43" y="-289">inCS</name>
		</location>
		<init ref="id10"/>
		<transition>
			<source ref="id6"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-263" y="-433">Go?</label>
			<label kind="assignment" x="-263" y="-416">MCS--</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-153" y="-297">P[Mutex_guard]!</label>
			<label kind="assignment" x="-153" y="-280">ID = id</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id7"/>
			<label kind="guard" x="-59" y="-544">WCS &lt;= 0</label>
			<label kind="synchronisation" x="-59" y="-527">Go?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="34" y="-357">Go?</label>
			<label kind="assignment" x="34" y="-340">MCS++</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="93" y="-476">V[Mutex_guard]!
P[Men_guard]!</label>
			<label kind="assignment" x="93" y="-442">ID = id</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="68" y="-612">Go?</label>
			<label kind="assignment" x="68" y="-595">MD++</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-110" y="-671">WCS &gt; 0</label>
			<label kind="synchronisation" x="-110" y="-654">Go?</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-314" y="-603">P[Mutex_guard]!</label>
			<label kind="assignment" x="-314" y="-586">ID = id</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Woman</name>
		<parameter>const int id</parameter>
		<location id="id13" x="-196" y="144">
			<name x="-220" y="112">Start</name>
		</location>
		<location id="id14" x="20" y="144">
			<name x="-12" y="104">Wait</name>
		</location>
		<location id="id15" x="212" y="144">
			<name x="196" y="104">inCS</name>
		</location>
		<location id="id16" x="-77" y="-127">
		</location>
		<location id="id17" x="-187" y="-272">
			<name x="-211" y="-304">Start</name>
		</location>
		<location id="id18" x="118" y="-51">
			<name x="136" y="-68">inCS</name>
		</location>
		<location id="id19" x="-68" y="-408">
			<name x="-78" y="-442">If</name>
		</location>
		<location id="id20" x="118" y="-178">
			<name x="51" y="-187">Prepare</name>
		</location>
		<location id="id21" x="220" y="-297">
			<name x="229" y="-331">Wait</name>
		</location>
		<location id="id22" x="101" y="-408">
			<name x="91" y="-442">Delay</name>
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-148" y="120">P[Women_guard]!</label>
			<label kind="assignment" x="-148" y="144">ID = id</label>
			<nail x="-76" y="144"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="44" y="120">ready[id]==1</label>
			<label kind="synchronisation" x="44" y="144">Go?</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-170" y="-212">Go?</label>
			<label kind="assignment" x="-170" y="-195">WCS--</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-60" y="-76">P[Mutex_guard]!</label>
			<label kind="assignment" x="-60" y="-59">ID = id</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="guard" x="34" y="-323">MCS &lt;= 0</label>
			<label kind="synchronisation" x="34" y="-306">Go?</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="127" y="-136">Go?</label>
			<label kind="assignment" x="127" y="-119">WCS++</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="186" y="-255">V[Mutex_guard]!
P[Women_guard]!</label>
			<label kind="assignment" x="186" y="-221">ID = id</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="161" y="-391">Go?</label>
			<label kind="assignment" x="161" y="-374">WD++</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id22"/>
			<label kind="guard" x="-17" y="-450">MCS &gt; 0</label>
			<label kind="synchronisation" x="-17" y="-433">Go?</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-221" y="-382">P[Mutex_guard]!</label>
			<label kind="assignment" x="-221" y="-365">ID = id</label>
		</transition>
	</template>
	<template>
		<name>Signal</name>
		<location id="id23" x="-68" y="-161">
		</location>
		<location id="id24" x="-229" y="-161">
		</location>
		<location id="id25" x="-229" y="-306">
		</location>
		<location id="id26" x="93" y="-306">
		</location>
		<location id="id27" x="-68" y="-306">
		</location>
		<location id="id28" x="-68" y="-518">
		</location>
		<location id="id29" x="93" y="-518">
		</location>
		<location id="id30" x="-68" y="-42">
		</location>
		<location id="id31" x="-229" y="-518">
		</location>
		<location id="id32" x="-416" y="-518">
		</location>
		<init ref="id32"/>
		<transition>
			<source ref="id26"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="102" y="-178">V[Mutex_guard]!</label>
			<label kind="assignment" x="102" y="-161">ID = id</label>
			<nail x="93" y="-42"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="-59" y="-119">V[Women_guard]!</label>
			<label kind="assignment" x="-59" y="-102">ID = id</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="-263" y="-110">V[Men_guard]!</label>
			<label kind="assignment" x="-263" y="-93">ID = id</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id32"/>
			<label kind="guard" x="-170" y="-637">WCS &lt;= 0 || MD != 0
MCS &lt;= 0 || WCS &lt;= 0 || WD != 0</label>
			<label kind="synchronisation" x="-170" y="-603">Go?</label>
			<nail x="93" y="-586"/>
			<nail x="-416" y="-586"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="-68" y="-229">Go?</label>
			<label kind="assignment" x="-68" y="-246">WD--</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-229" y="-229">Go?</label>
			<label kind="assignment" x="-229" y="-246">MD--</label>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id25"/>
			<label kind="guard" x="-221" y="-450">WCS == 0
MD &gt; 0</label>
			<label kind="synchronisation" x="-221" y="-416">Go?</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id26"/>
			<label kind="guard" x="102" y="-442">WCS &gt; 0 || MD == 0
MCS &gt; 0 || WCS &gt; 0 || WD == 0</label>
			<label kind="synchronisation" x="102" y="-408">Go?</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id27"/>
			<label kind="guard" x="-59" y="-450">MCS == 0
WD &gt; 0</label>
			<label kind="synchronisation" x="-59" y="-416">Go?</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="guard" x="-50" y="-552">MCS != 0 || WD &lt;= 0</label>
			<label kind="synchronisation" x="-50" y="-535">Go?</label>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id28"/>
			<label kind="guard" x="-211" y="-552">WCS != 0 || MD &lt;= 0</label>
			<label kind="synchronisation" x="-211" y="-535">Go?</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="-399" y="-68">Go?</label>
			<nail x="-416" y="-42"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id31"/>
			<label kind="guard" x="-374" y="-544">SIGNAL!!</label>
		</transition>
	</template>
	<system>//Insert process assignments.
SEM_0 = Semaphore ( Men_guard );		//Add necessary semaphores and processes
SEM_1 = Semaphore ( Women_guard );
SEM_2 = Semaphore ( Mutex_guard );
M1 = Man ( 0 ); 
M2 = Man ( 1 ); 
W1 = Woman ( 2 );
W2 = Woman ( 3 );
G = Hurry ();


//Edit system definition.
system SEM_0, SEM_1, SEM_2, M1, M2, W1, W2, G;	//Add semaphores and processes as needed</system>
	<queries>
	</queries>
</nta>
